<script src="/vendor/javascripts/vue<%- (environment === 'production') ? '.min' : '' %>.js"></script>
<script src="/vendor/javascripts/moment.min.js"></script>
<script src="/vendor/javascripts/moment-duration-format.js"></script>
<script src="/vendor/javascripts/numeral/numeral.min.js"></script>
<script src="/vendor/javascripts/numeral/locales.min.js">numeral.locale('<%= getLocale() %>');</script>
<script src="/vendor/locales/fr.js"></script>

<div id="system-information">
    <div>
    <div class="pull-right" v-if="initialized">
        <span class="last-update" v-show="lastUpdateDate">{{ lastUpdateDate.format('Do MMMM YYYY LTS') }}</span>
        <div class="btn-group">
            <button type="button" class="btn btn-default" @click="toggleAutoRefresh()" :class="{ active: autoRefresher.timer, 'btn-success': autoRefresher.timer }">
                <i class="fa fa-refresh"></i> <%- __("Auto refresh (%s)", "{{autoRefresher.currentDelay.label}}"); %>
            </button>
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" :class="{ 'btn-success': autoRefresher.timer }">
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu dropdown-menu-right">
                <li v-for="delay of autoRefresher.delayChoices" @click="setAutoRefreshDelay(delay)"><a data-target="#" data-value="delay.ms" key="delay.label">{{delay.label}}</a></li>
            </ul>
        </div>
    </div>
    <h1>
        <%= __(pageTitle) %>
        <% if (prometheusEnabled) { %>
        <small style="margin-left: 30px;"><a href="/metrics" target="_blank"><i class="fa fa-area-chart"></i> <%= __('Prometheus data') %></a></small>
        <% } %>
    </h1>
    </div>

    <div id="app-loader" style="text-align: center; font-weight: bold; font-size: larger;margin-top: 50px;" v-if="!initialized">Loading data...</div>

    <div style="display:none;" v-show="initialized">
    <div class="row" >
        <div class="col-md-6">
            <div class="panel panel-default" v-if="metrics.system">
                <div class="panel-heading"><b><%= __('System') %></b></div>
                <key-value-store>
                    <key-value v-if="metrics.system.arch" name="<%= __('Architecture') %>" :value="metrics.system.arch"></key-value>
                    <key-value v-if="metrics.system.platform" name="<%= __('OS') %>" :value="metrics.system.platform"></key-value>

                    <key-value-header v-if="metrics.system.du" name="<%= __('Storage usage') %>"></key-value-header>
                    <key-value v-if="metrics.system.du" v-for="(du, path) of metrics.system.du" :name="path" value="" key="{{'du-' + path}}" >
                        <disk-usage :total="du.total" :used="du.total - du.available"></disk-usage>
                    </key-value>
                </key-value-store>
            </div>

            <div class="panel panel-default" v-if="metrics.app">
                <div class="panel-heading"><b><%= siteTitle %> application</b></div>
                <key-value-store>
                    <key-value v-if="metrics.app.version" name="<%= __('Version') %>" :value="metrics.app.version"></key-value>
                    <key-value v-if="metrics.app.startTstamp" name="<%= __('Started on') %>" :value="metrics.app.startTstamp | dateTime"></key-value>
                    <key-value v-if="metrics.app.uptime" name="<%= __('Uptime') %>" :value="metrics.app.uptime | durationSeconds"></key-value>
                    <key-value v-if="metrics.app.pid" name="<%= __('PID') %>" :value="metrics.app.pid"></key-value>

                    <key-value-header v-if="metrics.app.memoryUsage" name="<%= __('Memory usage') %>"></key-value-header>
                    <key-value v-if="metrics.app.memoryUsage.rss" name="<%= __('RSS') %>" :value="metrics.app.memoryUsage.rss | autoBytes"></key-value>
                    <key-value v-if="metrics.app.memoryUsage.heapUsed || metrics.app.memoryUsage.heapTotal" name="<%= __('Heap') %>" value="">
                        {{ metrics.app.memoryUsage.heapUsed | autoBytes }} / {{ metrics.app.memoryUsage.heapTotal | autoBytes }}
                        <div class="progress" style="margin-bottom:0" >
                            <div class="progress-bar" role="progressbar" :style="{ width: percentage(metrics.app.memoryUsage.heapUsed, metrics.app.memoryUsage.heapTotal) + '%' }" style="min-width: 2em;">
                                {{ percentage(metrics.app.memoryUsage.heapUsed, metrics.app.memoryUsage.heapTotal) }}%
                            </div>
                        </div>
                    </key-value>
                </key-value-store>
            </div>

        </div>
        <div class="col-md-6">
            <div class="panel panel-default" v-if="metrics.node">
                <div class="panel-heading"><b><%= __('Node.js') %></b></div>
                <key-value-store>
                    <key-value v-if="metrics.node.version" name="<%= __('Version') %>" :value="metrics.node.version"></key-value>

                    <key-value-header v-if="metrics.node.modulesVersions" name="<%= __("Modules' versions") %>"></key-value-header>
                    <key-value v-if="metrics.node.modulesVersions" v-for="(version, name) of metrics.node.modulesVersions" :name="name" :value="version" key="{{'node-module-' + name}}" ></key-value>
                </key-value-store>
            </div>
        </div>
    </div>

    <div class="row" v-if="metrics.mongo">
        <div class="col-md-6" v-if="metrics.mongo.dbStats && metrics.mongo.dbStats.db">
            <div class="panel panel-default" >
                <div class="panel-heading"><b><%= __("Database '%s'", "{{metrics.mongo.dbStats.db}}") %></b></div>
                <key-value-store>
                    <key-value name="<%= __('Collections') %>" :value="metrics.mongo.dbStats.collections.toString()" v-if="metrics.mongo.dbStats.collections.toString()"></key-value>
                    <key-value name="<%= __('Views') %>" :value="metrics.mongo.dbStats.views.toString()" v-if="metrics.mongo.dbStats.views.toString()"></key-value>
                    <key-value name="<%= __('Objects') %>" :value="metrics.mongo.dbStats.objects.toString()" v-if="metrics.mongo.dbStats.objects.toString()"></key-value>
                    <key-value name="<%= __('Data size') %>" :value="metrics.mongo.dbStats.dataSize | autoBytes" v-if="metrics.mongo.dbStats.dataSize.toString()"></key-value>
                    <key-value name="<%= __('Storage size') %>" :value="metrics.mongo.dbStats.storageSize | autoBytes" v-if="metrics.mongo.dbStats.storageSize.toString()"></key-value>
                    <key-value name="<%= __('Average object size') %>" :value="metrics.mongo.dbStats.avgObjSize | autoBytes" v-if="metrics.mongo.dbStats.avgObjSize.toString()"></key-value>
                    <key-value name="<%= __('Indexes') %>" :value="metrics.mongo.dbStats.indexes.toString()" v-if="metrics.mongo.dbStats.indexes.toString()"></key-value>
                    <key-value name="<%= __('Index size') %>" :value="metrics.mongo.dbStats.indexSize.toString() | autoBytes" v-if="metrics.mongo.dbStats.indexSize.toString()"></key-value>
                </key-value-store>
            </div>
        </div>

        <div class="col-md-6" v-if="metrics.mongo.serverInfo">
            <div class="panel panel-default" >
                <div class="panel-heading"><b><%= __('MongoDB') %></b></div>
                <key-value-store>
                    <key-value name="<%= __('Version') %>" :value="metrics.mongo.serverInfo.version" v-if="metrics.mongo.serverInfo.version"></key-value>
                    <key-value name="<%= __('Architecture') %>" :value="metrics.mongo.serverInfo.buildEnvironment.target_arch" v-if="metrics.mongo.serverInfo.buildEnvironment.target_arch"></key-value>
                    <key-value name="<%= __('Minimum target OS') %>" :value="metrics.mongo.serverInfo.targetMinOS" v-if="metrics.mongo.serverInfo.targetMinOS"></key-value>
                    <key-value name="<%= __('Modules') %>" v-if="metrics.mongo.serverInfo.modules">
                        <ul class="list-unstyled" style="margin:0;" v-if="metrics.mongo.serverInfo.modules.length">
                            <li v-for="module of metrics.mongo.serverInfo.modules">{{module}}</li>
                        </ul>
                        <span v-else><%= __('None') %></span>
                    </key-value>
                    <key-value name="<%= __('Javascript engine') %>" :value="metrics.mongo.serverInfo.javascriptEngine" v-if="metrics.mongo.serverInfo.javascriptEngine"></key-value>
                    <key-value name="<%= __('Max BSON object size') %>" :value="metrics.mongo.serverInfo.maxBsonObjectSize.toString() | autoBytes" v-if="metrics.mongo.serverInfo.maxBsonObjectSize.toString()"></key-value>
                    <key-value name="<%= __('Storage engines') %>" v-if="metrics.mongo.serverInfo.storageEngines">
                        <ul class="list-unstyled" style="margin:0;" v-if="metrics.mongo.serverInfo.storageEngines.length">
                            <li v-for="engine of metrics.mongo.serverInfo.storageEngines">{{engine}}</li>
                        </ul>
                        <span v-else><%= __('None') %></span>
                    </key-value>
                </key-value-store>
            </div>
        </div>
    </div>

    <div class="panel panel-default" v-if="metrics.env">
        <div class="panel-heading"><b><%= __('Environment variables') %></b></div>
        <key-value-store>
            <key-value v-for="(value, name) of metrics.env" :name="name" :value="value" key="{{'env-' + name}}" ></key-value>
        </key-value-store>
    </div>
    </div>

</div>

<script type="text/x-template" id="v-tpl-key-value-store">
    <table class="table table-key-value"><tbody>
        <slot></slot>
    </tbody></table>
</script>

<script type="text/x-template" id="v-tpl-key-value">
    <tr class="key-value">
        <td class="key">{{ name }}</td>
        <td v-if="value" class="value">{{ value }}</td>
        <td v-else class="value"><slot></slot></td>
    </tr>
</script>

<script type="text/x-template" id="v-tpl-key-value-header">
    <tr class="key-value">
        <td colspan="2" class="key header"> {{ name }}</td>
    </tr>
</script>

<script type="text/x-template" id="v-tpl-disk-usage">
    <div v-if>
        {{ used | autoBytes }} / {{ total | autoBytes }}
        <div class="progress" style="margin-bottom:0" >
            <div class="progress-bar" role="progressbar" :style="{ width: percentage(used, total) + '%' }" style="min-width: 2em;">
                {{ percentage(used, total) }}%
            </div>
        </div>
    </div>
</script>


<script type="text/javascript">
let sysInfoApp;
$(function () {
    Vue.mixin({
        filters: {
            'autoBytes': function (value) {
                return numeral(value).format('0.0 ib');
            },
            'durationSeconds': function(seconds) {
                return moment.duration(seconds, "seconds").format("<%= __('Y [year(s)] M [month(s)] d [day(s)] h[h] mm[m] ss[s]') %>");
            },'dateTime': function(tstamp) {
                return moment(tstamp).format("LLLL:ss");
            }
        },
        methods: {
            percentage: function (part, full, precision) {
                if (part && full && full > 0) {
                    precision = precision || 0;
                    return Math.round((part / full) * 100, precision);
                } else {
                    return 0;
                }
            }
        }
    });

    sysInfoApp = new Vue({
        el: '#system-information',
        data: {
            autoRefresher: {
                timer: null,
                delayChoices: [
                    {
                        label: "1s",
                        ms: 1000
                    },
                    {
                        label: "2s",
                        ms: 2000
                    },
                    {
                        label: "5s",
                        ms: 5000
                    },
                    {
                        label: "10s",
                        ms: 10000
                    },
                    {
                        label: "30s",
                        ms: 30000
                    },
                ],
                currentDelay: {
                    label: "5s",
                    ms: 5000
                }
            },
            initialized: false,
            lastUpdateTstamp: null,
            metrics: {}
        },
        computed: {
            lastUpdateDate: function() {
                if (this.lastUpdateTstamp) {
                    return moment(this.lastUpdateTstamp);
                } else {
                    return moment();
                }
            }
        },
        methods: {
            updateData: function() {
                $.get('/admin/system-information', function (data) {
                    if (data.metrics) {
                        this.metrics = data.metrics;
                        this.initialized = true;
                    }
                    if (data.lastUpdate) {
                        this.lastUpdateTstamp = data.lastUpdate;
                    }
                }.bind(this));
            },
            startAutoRefresh: function(delay) {
                if (this.autoRefresher.timer) {
                    clearInterval(this.autoRefresher.timer);
                }
                delay = delay || this.autoRefresher.currentDelay.ms;
                if (delay === false || delay <= 0) {
                    delay = this.autoRefresher.currentDelay.ms;
                }
                this.autoRefresher.timer = setInterval(function () {
                    this.updateData();
                }.bind(this), delay);
                this.updateData();
            },
            stopAutoRefresh: function() {
                clearInterval(this.autoRefresher.timer);
                this.autoRefresher.timer = null;
            },
            toggleAutoRefresh: function() {
                if (this.autoRefresher.timer) {
                    this.stopAutoRefresh();
                } else {
                    this.startAutoRefresh(this.autoRefresher.currentDelay.ms);
                }
            },
            setAutoRefreshDelay: function(delay) {
                this.autoRefresher.currentDelay.label = delay.label;
                this.autoRefresher.currentDelay.ms = delay.ms;

                if (this.autoRefresher.timer) {
                    this.startAutoRefresh();
                }
            }
        },
        components: {
            'key-value-store': {
                template: '#v-tpl-key-value-store'
            },
            'key-value': {
                template: '#v-tpl-key-value',
                props: ['name', 'value'],
            },
            'key-value-header': {
                template: '#v-tpl-key-value-header',
                props: ['name'],
            },
            'disk-usage': {
                template: '#v-tpl-disk-usage',
                props: ['total', 'used'],
            }
        },
        mounted: function() {
            this.updateData();
            this.toggleAutoRefresh();
        },
        beforeDestroy: function() {
            this.stopAutoRefresh();
        }
    });
});
</script>